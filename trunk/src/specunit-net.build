<?xml version="1.0" ?>
<project name="specunit-net" default="hello" xmlns="http://nant.sf.net/release/0.85/nant.xsd">

  <property name="version" value="0.0.*" />

  <!--Main paths-->
  <property name="root-dir" value="${path::get-full-path('..')}" />
  <property name="src-dir" value="${root-dir}\src" />
  <property name="lib-dir" value="${root-dir}\lib" />
  <property name="tools-dir" value="${root-dir}\tools" />
  <property name="build-dir" value="${root-dir}\build" />
  <property name="doc-dir" value="${root-dir}\doc" />
  <property name="version-file" value="${src-dir}\SpecUnit.Version.xml"/>

  <!--Tools paths-->
	<property name="msbuild" value="C:\WINDOWS\Microsoft.NET\Framework\v3.5\MSBuild.exe" />
  <property name="nunitconsole" value="${tools-dir}\nunit\nunit-console.exe" />
  <property name="spec-report" value="${build-dir}\SpecUnit.Report.exe" />
  <property name="svn" value="c:\program files\subversion\bin\svn.exe" />
	<property name="svn" value="c:\program files (x86)\subversion\bin\svn.exe" if="${directory::exists('c:\program files (x86)')}"/>

	<!--External targets-->
  <target name="build-debug" depends="_clean-build-dir, _make-build-dir, _compile-debug, _copy-debug-artifacts-to-build-dir" />
  <target name="build-release" depends="_clean-build-dir, _make-build-dir, _compile-release, _copy-release-artifacts-to-build-dir" />
  <target name="test" depends="build-debug, _test" description="Compile and run tests" />
  <target name="generate-spec-report" depends="test, _generate-spec-report" description="Generate the specification report" />
  <target name="update-version" depends="_get-current-version, _generate-assembly-info" description="Get current version and assign it to assembly metadata" />
  <target name="package" depends="update-version, build-release, _generate-spec-report, _package-build" description="Build and package a release" />
  <target name="tc-build" depends="update-version, build-debug, _test, _tc-test, _generate-spec-report, _package-build" description="Compile and run tests" />

  <target name="hello">
    <echo message="Hi, how are you?" />
  </target>

  <target name="print-system-time">
    <echo message="Current time: ${datetime::now()}" />
  </target>

  <!--Package the build-->
  <target name = "_package-build">
    <property name="file-suffix" value="" />
    <if test="${environment::variable-exists('BUILD_NUMBER')}">
      <property name="file-suffix" value="-${environment::get-variable('BUILD_NUMBER')}" />
    </if>

    <zip zipfile="${build-dir}\SpecUnit${file-suffix}.zip">
      <fileset basedir="${build-dir}">
        <include name="SpecUnit.dll" />
        <include name="nunit.framework.dll" />
        <include name="SpecUnit.Report.exe" />
        <include name="SpecUnit.Specs.html" />
      </fileset>
    </zip>
  </target>

  <!--Clean build dir-->
	<target name="_clean-build-dir" description="Delete automated build artifacts">
		<delete dir="${build-dir}" if="${directory::exists(build-dir)}" failonerror="false"/>
	</target>

	<!--Make build dir-->
	<target name="_make-build-dir" description="Create build dir and build report dir">
		<mkdir dir="${build-dir}" unless="${directory::exists(build-dir)}" />
	</target>

	<!-- Compile using the Debug Configuration -->
	<target name="_compile-debug" description="Compile using the Debug Configuration">
		<exec program="${msbuild}">
			<arg value="${src-dir}\SpecUnit.sln" />
			<arg value="/v:n" />
			<arg value="/p:Configuration=Debug" />
			<arg value="/p:WarningLevel=0" />
			<arg value="/p:SolutionDir=${src-dir}" />
		</exec>
	</target>

	<target name="_copy-debug-artifacts-to-build-dir">
		<copy todir="${build-dir}" overwrite="true">
      <fileset basedir="${src-dir}\SpecUnit.Specs\bin\Debug\">
        <include name="*.*" />
			</fileset>
		</copy>
	</target>

  <!-- Compile using the Release Configuration -->
  <target name="_compile-release" description="Compile using the Debug Configuration">
    <exec program="${msbuild}">
      <arg value="${src-dir}\SpecUnit.sln" />
      <arg value="/v:n" />
      <arg value="/p:Configuration=Release" />
      <arg value="/p:WarningLevel=0" />
      <arg value="/p:SolutionDir=${src-dir}" />
    </exec>
  </target>

  <target name="_copy-release-artifacts-to-build-dir">
		<copy todir="${build-dir}" overwrite="true">
      <fileset basedir="${src-dir}\SpecUnit.Specs\bin\Release\">
        <include name="*.*" />
      </fileset>
		</copy>
	</target>

	<!--Test-->
	<target name="_test">
		<exec program="${nunitconsole}" verbose="true">
			<arg value="${build-dir}/SpecUnit.Specs.dll" />
			<arg value="/nologo" />
		</exec>
	</target>

  <!--Generate specification report-->
  <target name = "_generate-spec-report">
    <exec program="${spec-report}" verbose="true">
      <arg value="${build-dir}\SpecUnit.Specs.dll" />
    </exec>
    <move todir="${build-dir}" overwrite="true">
      <fileset>
        <include name="SpecUnit.Specs.html" />
      </fileset>
    </move>
  </target>

  <!--TeamCity test launcher-->
  <target name="_tc-test">
    <exec program="${teamcity.dotnet.nunitlauncher2.0}">
      <arg file="..\build\SpecUnit.Specs.dll"/>
    </exec>
  </target>

  <!--Version-->
  <target name="_get-current-version">
    <if test="${environment::variable-exists('BUILD_NUMBER')}">
      <property name="version" value="${environment::get-variable('BUILD_NUMBER')}" />
    </if>

    <echo message="Got version number: ${version}"/>
  </target>

  <target name="_generate-assembly-info">
    <asminfo output="${src-dir}\CommonAssemblyInfo.cs" language="CSharp" verbose="true">
      <imports>
        <import namespace="System.Reflection" />
        <import namespace="System.Runtime.CompilerServices" />
        <import namespace="System.Runtime.InteropServices" />
      </imports>
      <attributes>
        <attribute type="AssemblyCompanyAttribute" value="Scott Bellware" />
        <attribute type="AssemblyCopyrightAttribute" value="Copyright Â© Scott Bellware 2007" />
        <attribute type="AssemblyVersionAttribute" value="${version}" />
        <attribute type="AssemblyFileVersionAttribute" value="${version}" />
      </attributes>
      <references>
        <include name="System.Reflection.dll" />
      </references>
    </asminfo>

    <echo message="Assigned version number: ${version}"/>
  </target>

</project>